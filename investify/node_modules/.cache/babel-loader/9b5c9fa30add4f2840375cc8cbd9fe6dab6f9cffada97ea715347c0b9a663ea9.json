{"ast":null,"code":"var _jsxFileName = \"/Users/yashtanwar/Documents/GitHub/money-mavericks/investify/src/ChatBot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// import ChatMessage from './components/ChatMessage';\n// import ChatInput from './components/ChatInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatBot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const handleSendMessage = text => {\n    const newMessage = {\n      text,\n      isBot: false\n    };\n    setMessages([...messages, newMessage]);\n\n    // Here you can call the API to get a response from the ChatGPT model\n    // and add it to the messages state as a bot message\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Chatbot App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBot, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatBot","_s","messages","setMessages","handleSendMessage","text","newMessage","isBot","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yashtanwar/Documents/GitHub/money-mavericks/investify/src/ChatBot.jsx"],"sourcesContent":["import React,{useState} from 'react'\n// import ChatMessage from './components/ChatMessage';\n// import ChatInput from './components/ChatInput';\n\nfunction ChatBot() {\n    const [messages, setMessages] = useState([]);\n\n  const handleSendMessage = (text) => {\n    const newMessage = { text, isBot: false };\n    setMessages([...messages, newMessage]);\n\n    // Here you can call the API to get a response from the ChatGPT model\n    // and add it to the messages state as a bot message\n  }\n  return (\n    <div>\n      <h1>My Chatbot App</h1>\n      {/* <div className=\"chat-container\">\n        {messages.map((message, index) => (\n          <ChatMessage key={index} text={message.text} isBot={message.isBot} />\n        ))}\n      </div>\n      <ChatInput onSendMessage={handleSendMessage} /> */}\n    </div>\n  )\n}\n\nexport default ChatBot"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMO,iBAAiB,GAAIC,IAAI,IAAK;IAClC,MAAMC,UAAU,GAAG;MAAED,IAAI;MAAEE,KAAK,EAAE;IAAM,CAAC;IACzCJ,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEI,UAAU,CAAC,CAAC;;IAEtC;IACA;EACF,CAAC;;EACD,oBACEP,OAAA;IAAAS,QAAA,eACET,OAAA;MAAAS,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAK;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAOnB;AAEV;AAACX,EAAA,CArBQD,OAAO;AAAAa,EAAA,GAAPb,OAAO;AAuBhB,eAAeA,OAAO;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}