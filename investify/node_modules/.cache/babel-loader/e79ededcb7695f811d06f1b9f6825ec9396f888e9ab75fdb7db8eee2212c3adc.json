{"ast":null,"code":"var _jsxFileName = \"/Users/yashtanwar/Documents/GitHub/money-mavericks/investify/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport SideMenu from './components/SideMenu';\nimport Navbar from './components/Navbar';\nimport Table from './components/Table';\nimport PortfolioCard from './components/PortfolioCard';\n// import ChatMessage from './components/ChatMessage';\n// import ChatInput from './components/ChatInput';\nimport data1 from './data1';\nimport data2 from './data2';\nimport data3 from './data3';\nimport data4 from './data4';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Overview, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Overview\",\n        children: /*#__PURE__*/_jsxDEV(Overview, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nfunction Overview() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(PortfolioCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-column\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            headers: ['Share', 'Price', 'Change', 'Percent'],\n            data: data1,\n            heading: \"MY PORTFOLIO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-column\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            headers: ['Share', 'Close', 'Volume'],\n            data: data2,\n            heading: \"MOST  TRANSCATIONS \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-column\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            headers: ['Share', 'Close', 'Percent'],\n            data: data3,\n            heading: \"MOST INCREASED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-column\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            headers: ['Share', 'Close', 'Percent'],\n            data: data4,\n            heading: \"MOST REDUCED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n// function ChatBot(){\n//   const [messages, setMessages] = useState([]);\n\n//   const handleSendMessage = (text) => {\n//     const newMessage = { text, isBot: false };\n//     setMessages([...messages, newMessage]);\n\n//     // Here you can call the API to get a response from the ChatGPT model\n//     // and add it to the messages state as a bot message\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <h1>My Chatbot App</h1>\n//       <div className=\"chat-container\">\n//         {messages.map((message, index) => (\n//           <ChatMessage key={index} text={message.text} isBot={message.isBot} />\n//         ))}\n//       </div>\n//       <ChatInput onSendMessage={handleSendMessage} />\n//     </div>\n//   );\n// }\n_c2 = Overview;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Overview\");","map":{"version":3,"names":["React","useState","SideMenu","Navbar","Table","PortfolioCard","data1","data2","data3","data4","BrowserRouter","Router","Routes","Route","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","fileName","_jsxFileName","lineNumber","columnNumber","path","Overview","_c","className","headers","data","heading","_c2","$RefreshReg$"],"sources":["/Users/yashtanwar/Documents/GitHub/money-mavericks/investify/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css'\nimport SideMenu from './components/SideMenu';\nimport Navbar from './components/Navbar';\nimport Table from './components/Table';\nimport PortfolioCard from './components/PortfolioCard';\n// import ChatMessage from './components/ChatMessage';\n// import ChatInput from './components/ChatInput';\nimport data1 from './data1';\nimport data2 from './data2';\nimport data3 from './data3';\nimport data4 from './data4';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n\n\n  return (\n    <Router>\n      <Navbar/>\n      <SideMenu />\n      <Routes>\n          <Route path=\"/\">\n            <Overview />\n          </Route>\n          <Route path=\"/Overview\">\n            <Overview />\n          </Route>\n          {/* <Route path=\"/user\">\n            <User />\n          </Route>\n          <Route path=\"/history\">\n          <TransacHist />\n          </Route> */}\n          {/* <Route path=\"/chatbot\">\n          <ChatBot />\n          </Route> */}\n\n        </Routes>\n    \n    </Router>\n  );\n}\n\nfunction Overview(){\n  return(\n    <>\n    <div className=\"container\">\n    <PortfolioCard/>\n    </div>\n     \n    <div className=\"container2\">\n      <div className=\"table-grid\">\n        <div className=\"table-column\">\n          <Table headers={['Share', 'Price', 'Change','Percent']} data={data1} heading=\"MY PORTFOLIO\"/>\n        </div>\n        <div className=\"table-column\">\n          <Table headers={['Share', 'Close', 'Volume']} data={data2} heading=\"MOST  TRANSCATIONS \" />\n        </div>\n        <div className=\"table-column\">\n          <Table headers={['Share', 'Close', 'Percent']} data={data3} heading=\"MOST INCREASED\"/>\n        </div>\n        <div className=\"table-column\">\n          <Table headers={['Share', 'Close', 'Percent']} data={data4} heading=\"MOST REDUCED\" />\n        </div>\n      </div>\n\n      \n    </div>\n    </>\n\n  )\n}\n\n// function ChatBot(){\n//   const [messages, setMessages] = useState([]);\n\n//   const handleSendMessage = (text) => {\n//     const newMessage = { text, isBot: false };\n//     setMessages([...messages, newMessage]);\n\n//     // Here you can call the API to get a response from the ChatGPT model\n//     // and add it to the messages state as a bot message\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <h1>My Chatbot App</h1>\n//       <div className=\"chat-container\">\n//         {messages.map((message, index) => (\n//           <ChatMessage key={index} text={message.text} isBot={message.isBot} />\n//         ))}\n//       </div>\n//       <ChatInput onSendMessage={handleSendMessage} />\n//     </div>\n//   );\n// }\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}