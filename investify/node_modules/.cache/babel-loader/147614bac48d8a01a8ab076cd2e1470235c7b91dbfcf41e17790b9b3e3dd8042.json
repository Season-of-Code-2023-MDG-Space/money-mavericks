{"ast":null,"code":"var _jsxFileName = \"/Users/yashtanwar/Documents/GitHub/money-mavericks/investify/src/App.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import './App.css'\n// import SideMenu from './components/SideMenu';\n// import Navbar from './components/Navbar';\n// import Overview from './Overview';\n// import ChatGPT from './ChatBot';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  useEffect(() => {\n    // Fetch initial messages from server\n    axios.get('/api/messages').then(response => {\n      setMessages(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    // Add new message to state and send to server\n    const newMessage = {\n      text: inputValue\n    };\n    setMessages([...messages, newMessage]);\n    axios.post('/api/messages', newMessage).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n\n    // Clear input field\n    setInputValue('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-gpt\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-gpt__messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-gpt__message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GG/YeSFNrWOWKG591Wbb47E4YjM=\");\n_c = App;\nexport default App;\n{/* <>\n <Navbar/>\n <SideMenu />\n <Router>\n  <Routes>\n    <Route path=\"/ChatBot\" element={<Overview />} />\n    <Route path=\"/\" element={<ChatGPT/>} />\n  </Routes>\n </Router>\n </> */}\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","messages","setMessages","inputValue","setInputValue","get","then","response","data","catch","error","console","log","handleInputChange","event","target","value","handleFormSubmit","preventDefault","newMessage","text","post","className","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/Users/yashtanwar/Documents/GitHub/money-mavericks/investify/src/App.js"],"sourcesContent":["// import React from 'react';\n// import './App.css'\n// import SideMenu from './components/SideMenu';\n// import Navbar from './components/Navbar';\n// import Overview from './Overview';\n// import ChatGPT from './ChatBot';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  useEffect(() => {\n    // Fetch initial messages from server\n    axios.get('/api/messages')\n      .then(response => {\n        setMessages(response.data);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, []);\n\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    // Add new message to state and send to server\n    const newMessage = { text: inputValue };\n    setMessages([...messages, newMessage]);\n\n    axios.post('/api/messages', newMessage)\n      .then(response => {\n        console.log(response);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n    // Clear input field\n    setInputValue('');\n  };\n  return (\n    <div className=\"chat-gpt\">\n      <div className=\"chat-gpt__messages\">\n        {messages.map((message, index) => (\n          <div key={index} className=\"chat-gpt__message\">\n            <p>{message.text}</p>\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleFormSubmit}>\n        <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n \n\n  );\n}\n\nexport default App;\n\n{/* <>\n<Navbar/>\n<SideMenu />\n<Router>\n  <Routes>\n    <Route path=\"/ChatBot\" element={<Overview />} />\n    <Route path=\"/\" element={<ChatGPT/>} />\n  </Routes>\n</Router>\n</> */}"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAACS,GAAG,CAAC,eAAe,CAAC,CACvBC,IAAI,CAACC,QAAQ,IAAI;MAChBL,WAAW,CAACK,QAAQ,CAACC,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,iBAAiB,GAAGC,KAAK,IAAI;IACjCV,aAAa,CAACU,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,gBAAgB,GAAGH,KAAK,IAAI;IAChCA,KAAK,CAACI,cAAc,EAAE;;IAEtB;IACA,MAAMC,UAAU,GAAG;MAAEC,IAAI,EAAEjB;IAAW,CAAC;IACvCD,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEkB,UAAU,CAAC,CAAC;IAEtCvB,KAAK,CAACyB,IAAI,CAAC,eAAe,EAAEF,UAAU,CAAC,CACpCb,IAAI,CAACC,QAAQ,IAAI;MAChBI,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;IACvB,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;;IAEJ;IACAN,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EACD,oBACEN,OAAA;IAAKwB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBzB,OAAA;MAAKwB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAChCtB,QAAQ,CAACuB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3B5B,OAAA;QAAiBwB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,eAC5CzB,OAAA;UAAAyB,QAAA,EAAIE,OAAO,CAACL;QAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAK,GADbJ,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAGhB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eACNhC,OAAA;MAAMiC,QAAQ,EAAEd,gBAAiB;MAAAM,QAAA,gBAC/BzB,OAAA;QAAOkC,IAAI,EAAC,MAAM;QAAChB,KAAK,EAAEb,UAAW;QAAC8B,QAAQ,EAAEpB;MAAkB;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACrEhC,OAAA;QAAQkC,IAAI,EAAC,QAAQ;QAAAT,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC9B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAIV;AAAC9B,EAAA,CAtDQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AAwDZ,eAAeA,GAAG;AAElB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OATC;AASM,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}